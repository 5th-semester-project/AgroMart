name: Continuous Integration 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  Unit-Testing:
    runs-on: ubuntu-latest
    outputs:
      test-passed: ${{ steps.test-step.outputs.result }}

    steps:
      - name: Checkout Main Branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Node environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install

      - name: Run tests
        id: test-step
        run: |
          npm run test
          if [ $? -eq 0 ]; then
            echo "::set-output name=result::success"
          else
            echo "::set-output name=result::failure"
          fi

  trivy-scan-for-vulnerabilities-of-file-system:
    runs-on: ubuntu-latest

    permissions:
      # required for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
        # env:
        #   GITHUB_TOKEN: ${{ secrets.TOKEN_TRIVY }}


  # second-job:
  #   needs: Unit-Testing
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Print test result
  #       run: echo "${{ needs.Unit-Testing.outputs.test-passed }}"

  # Sonarqube-Code-analysis:
  #   runs-on: ubuntu-latest
    
  #   steps:
  #     - name: Checkout Main Branch
  #       uses: actions/checkout@v4
  #       with:
  #         ref: main

  #     - name: SonarQube Scan
  #       uses: sonarsource/sonarqube-scan-action@v3.0.0
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}


